services:
    alphaedge__fastapi:
        image: alphaedge__fastapi:latest
        build:
            context: ./
            dockerfile: ./Dockerfile
        container_name: alphaedge__fastapi
        restart: always
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:${PORT}/health"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "3"
        depends_on:
            alphaedge__redis:
                condition: service_healthy
        env_file:
            - ./.env
        ports:
            - "${PORT}:${PORT}"
        environment:
            - HOST=$HOST
            - PORT=$PORT
            - REDIS_HOST=$REDIS_HOST
            - REDIS_PORT=$REDIS_PORT
            - REDIS_PASSWORD=$REDIS_PASSWORD
            - RABBITMQ_HOST=$RABBITMQ_HOST
            - RABBITMQ_USER=$RABBITMQ_USER
            - RABBITMQ_PASS=$RABBITMQ_PASS
        volumes:
            - .:/app
            - ./logs:/app/logs
        networks:
            - alphaedge__network
        deploy:
            resources:
                limits:
                    cpus: "0.5" # Use half of the available CPU
                    memory: 256M # Limit memory to 256 MB
                reservations:
                    cpus: "0.25" # Reserve 25% of the available CPU
                    memory: 128M # Reserve 128 MB memory

    alphaedge__redis:
        image: redis:latest
        container_name: alphaedge__redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - "${REDIS_PORT}:6379"
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        healthcheck:
            test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
            interval: 10s
            timeout: 5s
            retries: 3
            start_period: 30s
        restart: always
        networks:
            - alphaedge__network
        deploy:
            resources:
                limits:
                    cpus: "0.25" # Use 25% of the available CPU
                    memory: 128M # Limit memory to 128 MB
                reservations:
                    cpus: "0.1" # Reserve 10% of the available CPU
                    memory: 64M # Reserve 64 MB memory

networks:
    alphaedge__network:
        driver: bridge
        external: true
